{"version":3,"file":"userGuard.js","names":["verify","require","userGuard","req","res","next","authorization","headers","status","json","msg","token","split","payload","process","env","JWT_SECRET_KEY","rol","error","console","log","exports"],"sources":["../../src/guards/userGuard.js"],"sourcesContent":["const { verify } = require('jsonwebtoken');\n\n// Creates a Guard to dennegate/authorize the user\nfunction userGuard(req, res, next) {\n  // Captures Authorization header\n  const { authorization } = req.headers;\n  // Checks if it has the Authorization header\n  if (!authorization) {\n    // Return error 403, if header wasn't sent\n    next(res.status(403).json({ status: 'error', msg: 'NOT AUTHORIZED' }));\n  }\n  try {\n    // Grabs the token from the Authorization header.\n    const token = authorization.split(' ')[1];\n    // Takes the payload from the token\n    const payload = verify(token, process.env.JWT_SECRET_KEY);\n    // Verifies the role of the user, admitting only admins.\n    if (payload.rol !== 'admin') {\n      next(\n        res.status(403).json({ status: 'error', msg: 'USER NOT AUTHORIZED' })\n      );\n    }\n  } catch (error) {\n    console.log(error);\n    next(res.status(500).json({ status: 'error', msg: 'An error ocurred' }));\n  }\n  // Pasa a ejecutar la API\n  next();\n}\n\nexports.userGuard = userGuard;\n"],"mappings":";;AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAE1C;AACA,SAASC,SAAS,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACjC;EACA,MAAM;IAAEC;EAAc,CAAC,GAAGH,GAAG,CAACI,OAAO;EACrC;EACA,IAAI,CAACD,aAAa,EAAE;IAClB;IACAD,IAAI,CAACD,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAED,MAAM,EAAE,OAAO;MAAEE,GAAG,EAAE;IAAiB,CAAC,CAAC,CAAC;EACxE;EACA,IAAI;IACF;IACA,MAAMC,KAAK,GAAGL,aAAa,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC;IACA,MAAMC,OAAO,GAAGb,MAAM,CAACW,KAAK,EAAEG,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC;IACzD;IACA,IAAIH,OAAO,CAACI,GAAG,KAAK,OAAO,EAAE;MAC3BZ,IAAI,CACFD,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAED,MAAM,EAAE,OAAO;QAAEE,GAAG,EAAE;MAAsB,CAAC,CAAC,CACtE;IACH;EACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBb,IAAI,CAACD,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAED,MAAM,EAAE,OAAO;MAAEE,GAAG,EAAE;IAAmB,CAAC,CAAC,CAAC;EAC1E;EACA;EACAL,IAAI,EAAE;AACR;AAEAgB,OAAO,CAACnB,SAAS,GAAGA,SAAS"}