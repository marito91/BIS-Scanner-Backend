{"version":3,"file":"adminModel.js","names":["model","Schema","require","genSalt","hash","adminSchema","email","type","required","password","firstName","lastName","code","versionKey","pre","next","salt","AdminModel","exports"],"sources":["../../src/models/adminModel.js"],"sourcesContent":["const { model, Schema } = require('mongoose');\nconst { genSalt, hash } = require('bcryptjs');\n\nconst adminSchema = new Schema(\n  {\n    email: {\n      type: 'string',\n      required: true,\n    },\n    password: {\n      type: 'string',\n      required: true,\n    },\n    firstName: {\n      type: 'string',\n    },\n    lastName: {\n      type: 'string',\n    },\n    code: {\n      type: 'number',\n    },\n  },\n  {\n    versionKey: false,\n  }\n);\n\nadminSchema.pre('save', async function (next) {\n  const salt = await genSalt(10);\n  this.password = await hash(this.password, salt);\n  next();\n});\n\nconst AdminModel = model('admin', adminSchema);\n\nexports.AdminModel = AdminModel;\n"],"mappings":";;AAAA,MAAM;EAAEA,KAAK;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC7C,MAAM;EAAEC,OAAO;EAAEC;AAAK,CAAC,GAAGF,OAAO,CAAC,UAAU,CAAC;AAE7C,MAAMG,WAAW,GAAG,IAAIJ,MAAM,CAC5B;EACEK,KAAK,EAAE;IACLC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRF,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDE,SAAS,EAAE;IACTH,IAAI,EAAE;EACR,CAAC;EACDI,QAAQ,EAAE;IACRJ,IAAI,EAAE;EACR,CAAC;EACDK,IAAI,EAAE;IACJL,IAAI,EAAE;EACR;AACF,CAAC,EACD;EACEM,UAAU,EAAE;AACd,CAAC,CACF;AAEDR,WAAW,CAACS,GAAG,CAAC,MAAM,EAAE,gBAAgBC,IAAI,EAAE;EAC5C,MAAMC,IAAI,GAAG,MAAMb,OAAO,CAAC,EAAE,CAAC;EAC9B,IAAI,CAACM,QAAQ,GAAG,MAAML,IAAI,CAAC,IAAI,CAACK,QAAQ,EAAEO,IAAI,CAAC;EAC/CD,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,MAAME,UAAU,GAAGjB,KAAK,CAAC,OAAO,EAAEK,WAAW,CAAC;AAE9Ca,OAAO,CAACD,UAAU,GAAGA,UAAU"}